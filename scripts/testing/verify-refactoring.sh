#!/bin/bash

echo "üîç Verifying BotProxyController Refactoring Migration"
echo "=================================================="

# Check if new structure exists
echo ""
echo "üìÅ Checking new file structure..."

# Services
if [ -f "/home/linuxuser/bot-manager/backend/src/services/botProxy/BotCommunicationService.ts" ]; then
  echo "‚úÖ BotCommunicationService.ts"
else
  echo "‚ùå BotCommunicationService.ts - MISSING"
fi

if [ -f "/home/linuxuser/bot-manager/backend/src/services/botProxy/MessageRoutingService.ts" ]; then
  echo "‚úÖ MessageRoutingService.ts"
else
  echo "‚ùå MessageRoutingService.ts - MISSING"
fi

if [ -f "/home/linuxuser/bot-manager/backend/src/services/botProxy/ErrorHandlingService.ts" ]; then
  echo "‚úÖ ErrorHandlingService.ts"
else
  echo "‚ùå ErrorHandlingService.ts - MISSING"
fi

# Controllers
if [ -f "/home/linuxuser/bot-manager/backend/src/controllers/botProxy/BotStatusController.ts" ]; then
  echo "‚úÖ BotStatusController.ts"
else
  echo "‚ùå BotStatusController.ts - MISSING"
fi

if [ -f "/home/linuxuser/bot-manager/backend/src/controllers/botProxy/BotConfigController.ts" ]; then
  echo "‚úÖ BotConfigController.ts"
else
  echo "‚ùå BotConfigController.ts - MISSING"
fi

if [ -f "/home/linuxuser/bot-manager/backend/src/controllers/botProxy/BotMessagingController.ts" ]; then
  echo "‚úÖ BotMessagingController.ts"
else
  echo "‚ùå BotMessagingController.ts - MISSING"
fi

# Main controller
if [ -f "/home/linuxuser/bot-manager/backend/src/controllers/botProxyController.ts" ]; then
  echo "‚úÖ Main botProxyController.ts (refactored)"
else
  echo "‚ùå Main botProxyController.ts - MISSING"
fi

# Backup
if [ -f "/home/linuxuser/bot-manager/backend/src/controllers/botProxyController.backup-v2.ts" ]; then
  echo "‚úÖ Backup created (botProxyController.backup-v2.ts)"
else
  echo "‚ùå Backup - MISSING"
fi

echo ""
echo "üìä File size comparison:"
if [ -f "/home/linuxuser/bot-manager/backend/src/controllers/botProxyController.backup-v2.ts" ]; then
  ORIGINAL_SIZE=$(wc -l < "/home/linuxuser/bot-manager/backend/src/controllers/botProxyController.backup-v2.ts")
  echo "Original controller: $ORIGINAL_SIZE lines"
fi

if [ -f "/home/linuxuser/bot-manager/backend/src/controllers/botProxyController.ts" ]; then
  NEW_SIZE=$(wc -l < "/home/linuxuser/bot-manager/backend/src/controllers/botProxyController.ts")
  echo "New main controller: $NEW_SIZE lines"
fi

# Calculate total lines in new structure
TOTAL_NEW=0
for file in \
  "/home/linuxuser/bot-manager/backend/src/services/botProxy/BotCommunicationService.ts" \
  "/home/linuxuser/bot-manager/backend/src/services/botProxy/MessageRoutingService.ts" \
  "/home/linuxuser/bot-manager/backend/src/services/botProxy/ErrorHandlingService.ts" \
  "/home/linuxuser/bot-manager/backend/src/controllers/botProxy/BotStatusController.ts" \
  "/home/linuxuser/bot-manager/backend/src/controllers/botProxy/BotConfigController.ts" \
  "/home/linuxuser/bot-manager/backend/src/controllers/botProxy/BotMessagingController.ts" \
  "/home/linuxuser/bot-manager/backend/src/controllers/botProxyController.ts"
do
  if [ -f "$file" ]; then
    LINES=$(wc -l < "$file")
    TOTAL_NEW=$((TOTAL_NEW + LINES))
  fi
done

echo "Total new structure: $TOTAL_NEW lines"

echo ""
echo "üß™ Testing TypeScript compilation..."
cd /home/linuxuser/bot-manager/backend
if npx tsc --noEmit src/controllers/botProxyController.ts 2>/dev/null; then
  echo "‚úÖ Main controller compiles successfully"
else
  echo "‚ùå Main controller compilation failed"
fi

echo ""
echo "üéØ Migration Benefits:"
echo "‚Ä¢ Modular architecture with single responsibility"
echo "‚Ä¢ Easier to maintain and test individual components"  
echo "‚Ä¢ Better code organization and reusability"
echo "‚Ä¢ Maintained backward compatibility"

echo ""
echo "üîß API Endpoints Status:"
echo "All existing endpoints should work unchanged:"
echo "‚Ä¢ POST /api/bots/send-message (with attachment support)"
echo "‚Ä¢ GET /api/bots/:id/qr-code"
echo "‚Ä¢ GET /api/bots/:id/status"
echo "‚Ä¢ POST /api/bots/change-fallback-number"
echo "‚Ä¢ POST /api/bots/change-port"
echo "‚Ä¢ POST /api/bots/get-groups"
echo "‚Ä¢ All other messaging endpoints"

echo ""
echo "‚úÖ Migration verification completed!"
echo ""
echo "üí° To test the API:"
echo "  ./test-attachments.sh"
echo ""
echo "üîÑ To rollback if needed:"
echo "  cd backend/src/controllers"
echo "  cp botProxyController.backup-v2.ts botProxyController.ts"
